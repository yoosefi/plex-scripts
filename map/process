#!/bin/bash
[ -f plex.tsv ] || exit
source "$(dirname "${0}")/init.sh"

# process rows into ignores and symlinks
mkdir -p __plex
addEmblem __plex $Sync
gio set -t string __plex metadata::pinned-to-top true

addEmblem plex.tsv $Sync
while IFS=$'\t' read -r -a row; do

    # coalesce the target in case the season or episode is blank
    target="${row[2]:-${row[1]:-${row[0]}}}"

    # the target has to be ignored in the dir where it lives, not from a parent dir.
    [ -f "${target}" ] && echo "$(toIgnore "${target}")" >> "$(dirname "${target}")/.plexignore"

    # skip symlinking if any fields are blank
    [ -z "${row[2]}" ] && continue

    # season number must be integer
    season=$(printf "S%02d" "${row[0]}") || continue;

    # expect the episode number to be an integer, but fall back to literal
    episode=$(printf "E%02d" "${row[1]}") || episode="E${row[1]}"

    # symlink using file extension
    mkdir -p "__plex/${season}"
    ln -srf "${target}" "__plex/${season}/${season}${episode}.${target##*.}"

done < plex.tsv

# prune orphaned symlinks.
# we have to do it this way instead of simply clearing them all at the start
# because when plex sees a deletion it will remove them from playlists,
# even if they're immediately re-linked. we only want plex to see real changes.
# FIXME this has a race if plex.tsv has the same mtime as invocation. human lag should be enough.
find __plex -type l -not -newer plex.tsv -exec rm {} \+
find __plex -mindepth 1 -type d -empty -exec rm -r {} \+

# sort plex.tsv
# this must be done after pruning, because the old mtime is needed for that.
sort -n -k1,1 -k2,2 -t$'\t' -o plex.tsv plex.tsv

# sort .plexignore tree
find -name .plexignore -exec sort -u -o {} {} \;

#done
rmEmblem plex.tsv $Sync
rmEmblem __plex $Sync

